#include <fstream>
#include <cmath>
#include <vector>
#include <algorithm>
#include <map>
#include <string>
#include <queue>
using namespace std;

ifstream cin("in.txt");
ofstream cout ("out.txt");

const int size = 128;

vector < int > arr(size);

string get(int k, int n){
    string s = "";
    int cur = 1;
    for(int i = 1; i < n; i++) cur *= 2;
    for(int i = 0; i < n; i++) {
        if(k >= cur) {
            s+= '1';
            k -= cur;
        }
        else s += '0';
        cur /= 2;
    }
    return s;
}
int main() {
    for(int & i : arr){
       cin >> i;
    }

    for(auto x : arr) cout << x << " ";
    cout << "\n";
    // 2

    for(int &i : arr){
        i = round(double(i) / double (20)) * 20;
    }
    for(auto x : arr) cout << x << " ";
    cout << "\n";
   // 3

    map < int, int > count;
    for(int &i : arr) count[i]++;
    vector < int > b = arr;
    sort(b.begin(), b.end());
    auto it = unique(b.begin(), b.end());
    b.erase(it, b.end());
    sort(b.begin(), b.end(), [&](const int &left, const int &right){
        return count[left] > count[right];
    });
    map <int,  double > p;
    int k = 0;
    for(auto &i : b){
        p[i] = double(count[i]) / double (size);
        cout << i << " " << p[i] << " = " << count[i] << " / " << size << "\n";
    }

    //4

    cout << "\n" << "size\n" << (int)b.size() << "\n";

    int cur = 1, pow = 0;
    while(cur < (int)b.size()) {
        cur *= 2;
        pow++;
    }
    cout << "pow\n" << pow << "\n";

    double h = 0;
    for(auto &i : b){
        h -= p[i] * log2(p[i]);
    }
    cout << "entropia\n" << h << "\n";

    // 5
    cout << "\n";
    map < int, string > code;
    k = 0;
    for(auto &x : b){
        code[x] = get(k, pow);
        k++;
    }
    for(auto &x : arr) cout << code[x] << " ";

    //6

    map <int, string> shenfan;
    shenfan[40] = "11";
    shenfan[100] = "101";
    shenfan[120] = "011";
    shenfan[0] = "0011";
    shenfan[20] = "0001";
    shenfan[60] = "0101";
    shenfan[220] = "0100";
    shenfan[140] = "0010";
    shenfan[80] = "1001";
    shenfan[200] = "10001";
    shenfan[160] = "0000";
    shenfan[180] = "10000";
    cout << "\n";
    int len = 0;
    for(auto x : arr) {
        cout << shenfan[x] << " ";
        len += shenfan[x].size();
    }
    cout << "\n" << "len = " << len << "\n";
    /**
40:  11
100:  101
120:  011
0: 0011
20:  0001
60:  0101
220:  0100
140:  0010
80:  1001
200:  10001
160:  0000
180:  10000
    */
    // 7

    cout << "Haffman\n";
    priority_queue <int, vector<int>, greater<int>> q;
    for(auto &x : b) {
        q.push(count[x]);
        //cout << count[x] << " " << x << "\n";
     }
    while(q.size() > 1){
        int c1 = q.top();
        q.pop();
        int c2 = q.top();
        q.pop();
        cout << c1  <<  " " << c2 << endl;
        q.push(c1 + c2);
    }
    cout << "end\n";
    map < int, string > haf;
    haf[40] = "11";
    haf[100] = "001";
    haf[120] = "101";
    haf[0] = "0101";
    haf[20] = "0100";
    haf[60] = "1000";
    haf[220] = "1001";
    haf[140] = "1100";
    haf[80] = "1110";
    haf[200] = "1101";
    haf[160] = "11110";
    haf[180] = "11111";
    len = 0;
    for(auto x : b) {
        cout << haf[x] << endl;
    }
    cout << "Code for Haffman\n";
    for(auto x : arr) {
        cout << haf[x] << " ";
        len += haf[x].size();
    }
    cout << "\nlen = " << len << "\n";

    double s = 0;
    for(auto x : arr) s += p[x] * shenfan[x].size();
    cout << 1.0 - h / s << "\n";
    s = 0;
    for(auto x : arr) s += p[x] * haf[x].size();
    cout << 1.0 - h / s << "\n";
}
